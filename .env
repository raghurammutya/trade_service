# .env for trade_service - Environment configuration

# =============================================================================
# Environment Detection & Service Discovery
# =============================================================================
# Options: local, docker, kubernetes
ENVIRONMENT=docker

# Deployment environment (affects which services are required)
# Options: development, production, minimal, full, testing
DEPLOYMENT_ENV=production

# =============================================================================
# Service Hostnames (will be resolved automatically based on environment)
# =============================================================================

# Redis Configuration
REDIS_HOST=redis
REDIS_PORT=6379

# TimescaleDB Configuration  
TIMESCALEDB_HOST=timescaledb
TIMESCALEDB_PORT=5432
TIMESCALEDB_USER=tradmin
TIMESCALEDB_PASSWORD=tradpass
TIMESCALEDB_DB=tradingdb

# Database URL for local testing
DATABASE_URL=postgresql://tradmin:tradpass@localhost:5432/tradingdb
DATABASE_USERNAME=tradmin
DATABASE_PASSWORD=tradpass

# MongoDB Configuration
MONGODB_HOST=mongo
MONGODB_PORT=27017
MONGODB_USER=
MONGODB_PASSWORD=
MONGODB_AUTH_SOURCE=admin

# RabbitMQ Configuration
RABBITMQ_HOST=rabbitmq
RABBITMQ_PORT=5672
RABBITMQ_USER=guest
RABBITMQ_PASSWORD=guest

# =============================================================================
# Trade Service Specific Configuration
# =============================================================================

# External API Configuration
STOCKSDEVELOPER_API_KEY=dfca9ea1-2726-4821-b35a-72d4ca28c589
USER_SERVICE_URL=http://user-service:8001
TRADE_API_URL=http://external-trade-api:8080

# Rate Limiting
DAILY_API_LIMIT=5000
MINUTE_API_LIMIT=100

# Mock Configuration (for development/testing)
MOCK_ORDER_EXECUTION=false

# Celery Configuration
CELERY_BROKER_URL=redis://redis:6379/0
CELERY_RESULT_BACKEND=redis://redis:6379/0

# =============================================================================
# Application Configuration
# =============================================================================

# FastAPI Configuration
DEBUG=false
RUN_UVICORN=false

# Logging
LOG_LEVEL=INFO

# Testing
TESTING=false

# =============================================================================
# Database Connection Tuning
# =============================================================================

# Connection Pool Settings
DB_POOL_SIZE=10
DB_MAX_OVERFLOW=20
DB_POOL_RECYCLE=3600

# Connection Timeouts
CONNECTION_TIMEOUT=5
HEALTH_CHECK_TIMEOUT=3
TEST_PSEUDO_ACCOUNT=Raghu
TEST_ORGANIZATION_ID=Mutya
# =============================================================================
# Service Requirements by Environment
# =============================================================================

# Development: Only TimescaleDB required
# Production: TimescaleDB + Redis + RabbitMQ required  
# Full: All services required
# Testing: No services required (mocks used)

# =============================================================================
# Docker Compose Override Examples
# =============================================================================

# For docker-compose.override.yml, you might want to override:
# ENVIRONMENT=docker
# DEPLOYMENT_ENV=development
# MOCK_ORDER_EXECUTION=true
# DEBUG=true
# LOG_LEVEL=DEBUG