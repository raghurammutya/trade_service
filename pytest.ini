[tool:pytest]
# Pytest configuration for Trade Service

# Minimum version
minversion = 6.0

# Test discovery
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Test output and reporting
addopts = 
    -ra
    -q
    --strict-markers
    --strict-config
    --disable-warnings
    --tb=short
    --maxfail=10
    --cov=app
    --cov=shared_architecture
    --cov-report=term-missing
    --cov-report=html:htmlcov
    --cov-report=xml:coverage.xml
    --cov-fail-under=80
    --junitxml=test-results.xml
    --durations=10

# Asyncio configuration
asyncio_mode = auto

# Markers for test categorization
markers =
    unit: Unit tests
    integration: Integration tests 
    api: API endpoint tests
    slow: Slow running tests
    autotrader: Tests requiring AutoTrader mocks
    database: Tests requiring database
    redis: Tests requiring Redis
    security: Security-related tests
    performance: Performance tests
    smoke: Basic smoke tests
    regression: Regression tests
    external: Tests requiring external services

# Warning filters
filterwarnings =
    ignore::UserWarning
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore::sqlalchemy.exc.SAWarning

# Test environment configuration
database_url = postgresql://test_user:test_pass@localhost/trade_service_test
redis_url = redis://localhost:6379/1

# Test timeout configuration
timeout = 300
timeout_method = thread

# Logging configuration for tests
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Parallel test execution (requires pytest-xdist)
# addopts = -n auto